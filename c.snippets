# Check following file:
#   $HOME/.vim/bundle/vim-snippets/UltiSnips/c.snippets

snippet lo "long" i
long 
endsnippet

snippet us "unsigned" i
unsigned 
endsnippet

snippet db "double" i
double 
endsnippet

snippet ch "char" i
char 
endsnippet

snippet co "const" i
const 
endsnippet

snippet st "static"
static 
endsnippet

snippet vo "void" i
void 
endsnippet

snippet cl "cl"
class 
endsnippet

snippet pub "public"
public 
endsnippet

snippet pri "private"
private 
endsnippet

snippet pro "protected"
protected 
endsnippet

snippet ret "return"
return${1/(.+)/ /}${1:0};
endsnippet

snippet br "break"
break;
endsnippet

snippet ? "? ... : ..."
? ${1:x} : ${2:y}
endsnippet

snippet wh "while (...) {...}"
while (${1}) {
	${VISUAL}${0}
}
endsnippet

snippet do "do {...} while (...);"
do {
	${VISUAL}${0}
} while (${1});
endsnippet

snippet for "for (...; ...; ...) {...}"
for (${1}; ${2}; ${3}) {
	${VISUAL}${0}
}
endsnippet

snippet for+ "for (int i = 0; i < n; ++i) {...}"
for (${1:int} ${2:i} = ${3:0}; $2 < ${4:n}; ++$2) {
	${VISUAL}${0}
}
endsnippet

snippet for- "for (int i = n - 1; i >= 0; --i) {...}"
for (${1:int} ${2:i} = ${3:n - 1}; $2 >= ${4:0}; --$2) {
	${VISUAL}${0}
}
endsnippet

snippet if "if (...) {...}" b
if (${1}) {
	${VISUAL}${0}
}
endsnippet

snippet el "else {...}" b
else {
	${VISUAL}${0}
}
endsnippet

snippet eli "else if (...) {...}" b
else if (${1}) {
	${VISUAL}${0}
}
endsnippet

snippet ife "if (...) {...} else {...}" b
if (${1}) {
	${2}
} else {
	${0}
}
endsnippet

snippet fun "void f(...) {...}" b
${1:void} ${2:function_name}(${3}) {
	${VISUAL}${0}
}
endsnippet

snippet in "#include <...>" b
#include <${0}>
endsnippet

snippet ic "#include ''...''" b
#include "${0}"
endsnippet

snippet inh "#include 'header.h'" b
`!p snip.rv = f'#include "{path.replace("_test", "").replace(".cc", ".h")}"'`
endsnippet

snippet jk "->" iA
->
endsnippet
