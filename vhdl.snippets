snippet lib "library IEEE; | use IEEE.STD_LOGIC_1164.ALL;"
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
endsnippet

snippet uun "use IEEE.STD_LOGIC_UNSIGNED.ALL;"
use IEEE.STD_LOGIC_UNSIGNED.ALL;
endsnippet

snippet ent "entity ... ; | architecture ...;"
entity ${1:} is
	Port(
	);
end $1;
architecture ${2:Behavioral$1} of $1 is
begin
end $2;
endsnippet

snippet l "std_logic"
std_logic
endsnippet

snippet lv "std_logic_vector(... downto 0)"
std_logic_vector(${VISUAL}${0} downto 0)
endsnippet

snippet with "with ... select"
with ${1} select
	${2} <=
endsnippet

snippet com "component"
component ${VISUAL}${0}
	Port(
	);
end component;
endsnippet

snippet pm "...: ... port map(...);"
${1}: ${2} port map(${3});
endsnippet

snippet type "type ... is (...);"
type ${1} is (${2});
endsnippet

snippet pro "process(...) ..."
process(${VISUAL}${0})
begin
end process;
endsnippet

snippet ifup "if (clk'event and clk = '1') then ..."
if (${1:clk}'event and $1 = '1') then
${VISUAL}${0}
end if;
endsnippet

snippet case "case ... is ..."
case ${VISUAL}${0} is
	when others => null;
end case;
endsnippet

snippet var "variable"
variable
endsnippet

snippet sig "signal"
signal
endsnippet
